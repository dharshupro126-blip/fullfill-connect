rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to improve readability
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Donors: Users can only create a donor profile for themselves.
    // They can only update or delete their own profile.
    match /donors/{donorId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow update, delete: if isSignedIn() && isOwner(resource.data.userId);
    }

    // Receivers: Similar to donors, users can manage their own receiver profile.
    match /receivers/{receiverId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow update, delete: if isSignedIn() && isOwner(resource.data.userId);
    }

    // Volunteers: Can manage their own profile.
    // Can only update non-sensitive fields like status and location.
    match /volunteers/{volunteerId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow update: if isSignedIn() && isOwner(resource.data.userId)
                    && request.resource.data.keys().hasAll(['status', 'currentLocation']);
    }

    // Listings: Publicly readable. Only the original donor can create or update their own listings.
    match /listings/{listingId} {
      allow read: if true;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.donorId;
      allow update: if isSignedIn() && request.auth.uid == resource.data.donorId;
      allow delete: if false; // Soft delete by changing status instead
    }

    // Deliveries: Can only be read by involved parties (donor, receiver, volunteer).
    // Creation is handled by backend functions. Client can only update status.
    match /deliveries/{deliveryId} {
      allow read: if isSignedIn() && (
        request.auth.uid == resource.data.donorId ||
        request.auth.uid == resource.data.receiverId ||
        request.auth.uid == resource.data.volunteerId
      );

      // Creation should be done via a Cloud Function for security.
      allow create: if false;

      // Only volunteers can update the status. OTP hash cannot be written by the client.
      allow update: if isSignedIn() && request.auth.uid == resource.data.volunteerId
                      && !("otpHash" in request.resource.data);

      allow delete: if false;
    }

    // AuditLogs: Should be write-only and only from Cloud Functions. No client access.
    match /auditLogs/{logId} {
        allow read, write: if false;
    }
  }
}
